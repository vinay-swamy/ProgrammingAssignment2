print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
output
}
cr <- corr("specdata", 150)
setwd(oldir)
corr <- function(diry,thr=0){
setwd(diry)
output <- numeric()
filenames <- list.files(getwd())
print("got list of files")
for(i in length(filenames)){
print(i)
print(filenames[i])
y<-read.csv(filenames[i])#read in table
y <- y[complete.cases(y),]
print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
setwd(olddir)
output
}
setwd(olddir)
corr <- function(diry,thr=0){
olddir<-getwd()
setwd(diry)
output <- numeric()
filenames <- list.files(getwd())
print("got list of files")
for(i in length(filenames)){
print(i)
print(filenames[i])
y<-read.csv(filenames[i])#read in table
y <- y[complete.cases(y),]
print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
setwd(olddir)
output
}
cr <- corr("specdata", 150)
corr <- function(diry,thr=0){
olddir<-getwd()
setwd(diry)
output <- numeric()
filenames <- list.files(getwd())
print("got list of files")
for(i in filenames){
print(i)
print(filenames[i])
y<-read.csv(filenames[i])#read in table
y <- y[complete.cases(y),]
print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
setwd(olddir)
output
}
cr <- corr("specdata", 150)
corr <- function(diry,thr=0){
olddir<-getwd()
setwd(diry)
output <- numeric()
filenames <- list.files(getwd())
print("got list of files")
for(i in filenames){
print(i)
y<-read.csv(i)#read in table
y <- y[complete.cases(y),]
print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
setwd(olddir)
output
}
cr <- corr("specdata", 150)
setwd(oldir)
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 400)
head(cr)
corr <- function(diry,thr=0){
olddir<-getwd()
setwd(diry)
output <- numeric()
filenames <- list.files(getwd())
print("got list of files")
for(i in filenames){
# print(i)
y<-read.csv(i)#read in table
y <- y[complete.cases(y),]
#print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
setwd(olddir)
output
}
cr <- corr("specdata", 400)
head(cr)
cr <- corr("specdata", 400)
head(cr)
corr <- function(diry,thr=0){
olddir<-getwd()
setwd(diry)
output <- numeric()
filenames <- list.files(getwd())
#print("got list of files")
for(i in filenames){
# print(i)
y<-read.csv(i)#read in table
y <- y[complete.cases(y),]
#print(length(y$ID))
if(length(y$ID)<=thr){next}
output <- c(output,cor(y$sulfate,y$nitrate))
}
setwd(olddir)
output
}
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
summary(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
source('~/R/win-library/3.4/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
source('~/R/win-library/3.4/complete.R')
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
source('~/R/win-library/3.4/corr.R')
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
pollutantmean("specdata", "nitrate")
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lappply(flags,class)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flags,sum)
lapply(flag_colors ,sum)
sapply
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
?str
rm(flag_colors,flag_shapes,shape_mat)
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags)
tapply(flags$animate,flags$landmass,mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data("iris")
data(iris)
?iris
mean(iris$Sepal.Length)
View(iris)
k <- iris[iris$Species=="virginica"]
k <- iris[,iris$Species=="virginica"]
k <- iris[iris$Species=="virginica",]
View(k)
mean(k$Sepal.Length)
View(iris)
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
?apply
data(mtcars)
mtcars
?with
?split
with(mtcars,tapply(mpg,cyl,mean))
sapply(mtcars,cyl,mean)
sapply(split(mtcars$mpg,mtcars$cyl),mean)
tapply(mtcars$cyl,mtcars$mpg,mean)
tapply(mtcars$mpg,mtcars$cyl,mean)
mean(mtcars$mpg,mtcars$cyl)
tapply(mtcars$hp,mtcars$cyl,mean)
82.63636-209.21429
debug(ls)
ls()
5
g
g
5
5
6
4
2
1
4
54
5
3
3
2
6
76
34
3
5
3
5
3
4
1
2
debug
2
3
4
5
7
9
65
3
4555
df
df
ff
load("~/R/win-library/3.4/workspaces/filtering.RData")
k <- cpm(gcounts)
View(k)
k[ENSG00000223972,]
k["ENSG00000223972",]
n <- DGEList(counts=gcounts,group=samples1$group2)
keep <- which(rowSums(cpm(n)>4)>=2)
n=n[keep,]
n=calcNormFactors(n)
logcpm_n=cpm(n,log = TRUE)
rm(counts1,counts2,k,logcpm_n,tmp1)
remove(x,y,n)
load("C:/Users/swamy_000/Downloads/expr.rda/expr.rda")
View(geneAnn)
x <- y = DGEList(counts = gcounts, group = samples1$group2)
x <-  DGEList(counts = gcounts, group = samples1$group2)
keep <- which(rowSums(cpm(x)>4)>=2)
x <- x[keep,]
x <- calcNormFactors(x)
logcpm_x <- cpm(x,log = TRUE)
geneNames = geneAnn[rownames(logcpm_x), "gene"]
rownames(logcpm_x) = rownames(x) = geneNames
View(logcpm_x)
head(x$counts)
library(gplots)
rm(logcpm)
rm(y)
source('~/.active-rstudio-document')
library(tidyverse)
library(stringr)
library(gplots)
library(RColorBrewer)
library(edgeR)
source('~/.active-rstudio-document')
save.image("~/R/win-library/3.4/runasadmin.R.RData")
load("~/R/win-library/3.4/runasadmin.R.RData")
library(tidyverse)
library(stringr)
library(gplots)
library(RColorBrewer)
library(edgeR)
source('~/.active-rstudio-document')
library(grDevices)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
rm(degRes)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
getwd
getwd()
load("~/R/win-library/3.4/workspaces/filtering.RData")
library(tidyverse)
library(stringr)
library(gplots)
library(RColorBrewer)
library(edgeR)
View(samples1)
rm(x,y)
x = DGEList(counts = gcounts, group = samples1$group2)
keep = which(rowSums(cpm(y) > 10) >= 2)
keep = which(rowSums(cpm(x) > 10) >= 2)
x = x[keep,]
x = calcNormFactors(x)
logcpm = cpm(x, log=T)
geneNames = geneAnn[rownames(logcpm), "gene"]
rownames(logcpm) = rownames(y) = geneNames
read.csv("geneAnn.csv")
gennAnn=read.csv("geneAnn.csv")
geneAnn=gennAnn
View(geneAnn)
geneAnn=read.table("geneAnn.txt")
rm(gennAnn)
geneNames = geneAnn[rownames(logcpm), "gene"]
rownames(logcpm) = rownames(y) = geneNames
geneNames = geneAnn[rownames(logcpm), "gene"]
rownames(logcpm) = rownames(x) = geneNames
View(logcpm)
View(logcpm)
rm(x,logcpm,keep)
source('~/R/win-library/3.4/generate_rawlist.r')
View(logcpm)
source('~/R/win-library/3.4/run_analysis.R')
source('~/R/win-library/3.4/run_analysis.R')
source('~/R/win-library/3.4/run_analysis.R')
source('~/R/win-library/3.4/output_analysis.R')
source('~/R/win-library/3.4/plots.R')
rm(x,keep,pca1,logcpm, cor1)
rm(runDeg())
rm(runDeg)
rm(degRes,degSummary)
rm(data0)
rm(geneNames)
source('~/R/win-library/3.4/generate_rawlist.r')
source('~/R/win-library/3.4/run_analysis.R')
source('~/R/win-library/3.4/output_analysis.R')
source('~/R/win-library/3.4/plots.R')
pca1 = prcomp(t(logcpm), scale = F)
data0 = as.data.frame(pca1$x) %>%
select(PC1, PC2) %>%
rownames_to_column(var = "sampleID") %>%
inner_join(samples1) %>%
mutate(passage = as.factor(passage), protocol = as.factor(protocol))
ggplot(data0, aes(x = PC1, y = PC2, shape = protocol, col = passage)) +
geom_point(size = 3) +
scale_color_brewer(palette = "Blues") +
theme_minimal()
ggsave(filename = "seq_test/plots/3.pca.pdf", width = 15, height = 10, units = "cm", device = "pdf")
source('~/R/win-library/3.4/generate_rawlist.r')
source('~/R/win-library/3.4/run_analysis.R')
source('~/R/win-library/3.4/output_analysis.R')
source('~/R/win-library/3.4/plots.R')
rm(degRes,keep,pca1,x)
rm(cor1,degSummary,logcpm)
rm(runDeg)
rm(data0)
save.image("~/R/win-library/3.4/workspaces/readyforanalysis.RData")
source('~/R/win-library/3.4/generate_rawlist.r')
source('~/R/win-library/3.4/run_analysis.R')
View(logcpm)
logcpm["VIM",]
?estimateDisp
setwd('~')
getwd()
setwd('C:/Users/swamy_000/desktop)
f
setwd('C:/Users/swamy_000/desktop')
setwd("C:\Users\swamy_000\Desktop\Coursera Data Science")
setwd("C:/Users/swamy_000/Desktop/Coursera Data Science")
setwd('assigment3')
setwd('assignment3')
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
args(makeVector)
makeVector(c('a','b','c'))
x <- numeric(2)
x <- c(2,4)
makeVector()
makeVector(x)
rm(makeVector
rm(makeVector)
source('C:/Users/swamy_000/Desktop/Coursera Data Science/assignment3/h23.R')
makeVector()
k <- makeVector()
k
k <- makeVector(c(2,3,4,5))
k
makeVector()
l<- makeVector()
l$set(c(3,4,5))
l
l$get()
l$setmean()
l$setmean(mean(l$get()))
l$getmean()
setwd('programmingassigment2')
setwd('ProgrammingAssigment2')
setwd('ProgrammingAssignment2')
setwd('..')
sewd(~)
setwd(~)
setwd('~')
setwd('..')
setwd('desktop')
setwd("C:/Users/swamy_000/Desktop/ProgrammingAssignment2")
source('C:/Users/swamy_000/Desktop/ProgrammingAssignment2/cachematrix.R')
?matrix
test <- matrix(1:9,nrow = 3,ncol = 3)
View(test)
inverse_test <- solve(test)
test <- matrix(rnorm(9),nrow = 3,ncol = 3)
View(test)
inverse_test <- solve(test)
View(inverse_test)
source('C:/Users/swamy_000/Desktop/ProgrammingAssignment2/cachematrix.R')
k <- makeCacheMatrix()
k$set(test)
k$get()
View(test)
k$setinverse(inverse_test)
k$getinverse()
View(inverse_test)
test <- matrix(rnorm(9),nrow = 3,ncol = 3)
View(test)
k$set(test)
k$get()
k$getinverse()
source('C:/Users/swamy_000/Desktop/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(rnorm(9),nrow = 3,ncol = 3)
View(mat)
k <- makeCacheMatrix()
k$set(mat)
k$getinverse()
cacheSolve(k)
solve(mat)
cacheSolve(k)
source('C:/Users/swamy_000/Desktop/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(rnorm(9),nrow = 3,ncol = 3)
m <- makeCacheMatrix()
m$set(mat)
m$get(mat)
m$get()
View(mat)
m$getinverse()
cacheSolve(m)
solve(mat)
cacheSolve(m)
